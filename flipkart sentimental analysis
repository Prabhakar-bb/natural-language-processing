# creating empty reviews list 
canonreviews=[]

for i in range(1,31):
  ip=[]  
  url="https://www.flipkart.com/canon-eos-3000d-dslr-camera-single-kit-18-55-lens-16-gb-memory-card-carry-case/product-reviews/itmf3dhjyznuhayu?pid=CAMF3DHJURPEMNRN&lid=LSTCAMF3DHJURPEMNRNYD4BKP&marketplace=FLIPKART"+str(i)
  response = requests.get(url)
  soup = bs(response.content,"html.parser")# creating soup object to iterate over the extracted content 
  reviews = soup.find_all("div",attrs={"class",""})# Extracting the content under specific tags  
  for i in range(len(reviews)):
    ip.append(reviews[i].text)  
 
  canonreviews=canonreviews+ip 

# writng reviews in a text file 
with open("canon.txt","w",encoding='utf8') as output:
    output.write(str(canonreviews))
    
canon = " ".join(canonreviews)

import nltk
# from nltk.corpus import stopwords
# Removing unwanted symbols incase if exists
canon = re.sub("[^A-Za-z" "]+"," ", canon).lower()
canon = re.sub("[0-9" "]+"," ", canon)

# words that contained in ecodot reviews
canonwords = canon.split(" ")

#TFIDF
from sklearn.feature_extraction.text import TfidfVectorizer
vectorizer = TfidfVectorizer(canonwords, use_idf=True,ngram_range=(1, 3))
X = vectorizer.fit_transform(canonwords)

with open("C:/Users/prabhakar/Desktop/r and python code/npl doc/stop.txt","r") as sw:
    stopwords4 = sw.read()    
stopwords4 = stopwords4.split("\n")
remainingwords4 = [w for w in canonwords if not w in stopwords4]

# Joinining all the reviews into single paragraph 
review4 = " ".join(remainingwords4)


# WordCloud 
wordcloud4 = WordCloud(background_color='White', width=1800,height=1400).generate(review4)
plt.imshow(wordcloud4)


# positive word cloud
with open("C:/Users/prabhakar/Desktop/r and python code/npl doc/positive-words.txt","r") as pos:
  poswords4 = pos.read().split("\n")
# Choosing the only words which are present in positive words
pos4 = " ".join ([w for w in canonwords if  w in poswords4])

wordcloud4 = WordCloud(background_color='White', width=2000,height=1600).generate(pos4)
plt.imshow(wordcloud4)


# negative word cloud
with open("C:/Users/prabhakar/Desktop/r and python code/npl doc/negative-words.txt", "r") as neg:
  negwords4 = neg.read().split("\n")

# negative word cloud
neg4 = " ".join ([w for w in canonwords if w in negwords4])

neg4 = WordCloud(background_color='black',width=2000,height=1600).generate(neg4)
plt.imshow(neg4)
